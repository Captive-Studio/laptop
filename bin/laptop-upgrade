#!/usr/bin/env bash

SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
ROOT_DIR=$(dirname "$SCRIPT_DIR")

source "$ROOT_DIR/src/_functions.sh"

# Usage help
usage() {
  echo "Usage: $(basename "$0") [-h|--help] [-y|--yes]"
  echo "  -h|--help  Show this help message"
  echo "  -y|--yes   Skip confirmation and proceed"
}

# Parse options
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -h|--help)
      usage
      exit 0
      ;;
    -y|--yes)
      confirm="Y"
      ;;
    *)
      echo "Invalid option: $1"
      usage
      exit 1
      ;;
  esac
  shift
done

__laptop-upgrade-header() {
  echo -e $BRACKET
  cat <<-"EOF"
  _             _                                                    _
 | | __ _ _ __ | |_ ___  _ __        _   _ _ __   __ _ _ __ __ _  __| | ___
 | |/ _` | '_ \| __/ _ \| '_ \ _____| | | | '_ \ / _` | '__/ _` |/ _` |/ _ \
 | | (_| | |_) | || (_) | |_) |_____| |_| | |_) | (_| | | | (_| | (_| |  __/
 |_|\__,_| .__/ \__\___/| .__/       \__,_| .__/ \__, |_|  \__,_|\__,_|\___|
         |_|            |_|               |_|    |___/
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

EOF
  echo -e $NORMAL
}

__LAPTOP_TOOLS=("brew" "zinit" "asdf")
__LAPTOP_TOOLS_AVAILABLE=()

__laptop-upgrade-confirm() {
  # Confirm upgrade unless -y is provided
  if [[ -z "$confirm" ]]; then
    echo "Continue? (Y/n)"
    read -r confirm
  fi
}

__laptop-upgrade-detect() {
  echo "The following tools were found and will be upgraded :"
  echo ""

  # Iterate over the tools and check for their existence
  for tool in "${__LAPTOP_TOOLS[@]}"; do
    if [[ -n $(env $SHELL --login -c "which $tool") ]]; then
      __LAPTOP_TOOLS_AVAILABLE+=("$tool")
      echo "  âœ“ $tool"
    fi
  done
  echo ""
}

__laptop-upgrade-run() {
  for tool in "${__LAPTOP_TOOLS_AVAILABLE[@]}"; do
    case "$tool" in
      apt-get)
        ensure_apt_updated
        ;;
      asdf)
        ensure_asdf_updated
        ;;
      brew)
        ensure_brew_updated
        ;;
      zinit)
        ensure_zinit_updated
        ;;
      *)
        echo "Unknown tool: $tool"
        ;;
    esac
  done
}

__laptop-upgrade-header
__laptop-upgrade-detect
__laptop-upgrade-confirm
if [[ "$confirm" == "Y" || "$confirm" == "y" ]]; then
  __laptop-upgrade-run

  einfo "ðŸŽ‰ Upgrade successful"
else
  eerror "ðŸ›‘ Upgrade aborted"
  exit 1
fi

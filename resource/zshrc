#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
# ZSH startup script : interactive step
# .zshenv → .zprofile → >>>.zshrc<<< → .zlogin → .zlogout
#
# 🚨 Warning : this file was automatically generated, editing it is not recommended
#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯

# ❓ HELP
#
# 1️/ CUSTOMIZE CONFIGURATION
#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
#
# There are multiple ways to override / extends this configuration :
# Local only :
# - Create or modify `~/.zshrc.local`
#
# Shared (could be synchronizable to iCloud, Drive, etc) :
# - Create a `.sh` file in `$XDG_DATA_HOME/zsh/`
#
# 2/ HOWTO ADD ZSH PLUGIN ?
# ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
#
# This file uses zinit plugin manager (https://github.com/zdharma-continuum/zinit)
#
# Example 1: Install and load OhMyZSH plugin named "ruby"
# `zinit snippet OMZP::ruby`

typeset -A ZINIT

#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
# Load .zprofile when it seems not to have loaded (Linux)
if [ -z "$XDG_DATA_HOME" ]; then
  source "${HOME}/.zprofile"
fi

#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
# Load p10k-instant-prompt (if needed)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
##
# ZSH package manager : zinit
##
ZINIT_HOME=$XDG_CACHE_HOME/zsh/zinit
ZINIT[HOME_DIR]=$ZINIT_HOME
ZINIT[ZCOMPDUMP_PATH]=$XDG_CACHE_HOME/zsh/zcompdump

if [[ ! -f "$ZINIT_HOME/bin/zinit.zsh" ]]; then
  git clone https://github.com/zdharma-continuum/zinit "$ZINIT_HOME/bin"
  zcompile "$ZINIT_HOME/bin/zinit.zsh"
fi

if [[ -f "$ZINIT_HOME/bin/zinit.zsh" ]]; then
  source "$ZINIT_HOME/bin/zinit.zsh"
else
  echo "zinit cannot be installed"
fi;

# Find the first command available
_command-alternative() {
  for command_to_test in "$@"; do
    if type "$command_to_test" &>/dev/null; then
      printf "%s" "${command_to_test}"
      break
    fi
  done
}

# Load plugins
_zsh-load-plugins () {
  local directory=$1
  if [[ -d "$directory/" ]]; then
    for i in $(find "$directory/" -maxdepth 1 -type f -name "*.sh");
    do
      . $i;
    done
  fi
}
#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
##
# Custom scripts
##

# Load all files *.sh in $XDG_DATA_HOME/zsh
if [ ! -z "$XDG_DATA_HOME" ]; then
  _zsh-load-plugins "$XDG_DATA_HOME/zsh"
fi

# Load .zshrc.local
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
##
# History
##
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
[ -z "$HISTSIZE" ] && HISTSIZE=290000
[ -z "$SAVEHIST" ] && SAVEHIST=$HISTSIZE

##
# Editor and Pager
##
if [ -z "$PAGER" ]; then
  export PAGER=$(_command-alternative most less more)
fi
if [ -z "$EDITOR" ]; then
  if [[ -n $SSH_CONNECTION ]]; then # SSH mode
    export EDITOR=$(_command-alternative nano vim vi)
  else
    export EDITOR=$(_command-alternative code subl nano vim vi)
  fi
fi
if [[ $EDITOR == "code" ]]; then
  export EDITOR="$EDITOR --wait"
fi

if [ -z "$VISUAL" ] && [ ! -z "$EDITOR" ]; then
  export VISUAL="$EDITOR"
fi

#⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
##
# Cleanup
##
unset -f _command-alternative
